{
    "docs": [
        {
            "location": "/", 
            "text": "Building Android Images for AiC\n\n\nThis repository automates the creation of AOSP images for the AiC project.\n\n\nRequirements:\n\n\n\n\nA lot of disk space and time. 90-100GB for each Android version is a reasonable assumption.\n\n\nA reasonably modern linux distribution (tested with Ubuntu 16.10).\n\n\nThe commands \nmake\n and \ndocker\n.\n\n\n\n\nInstall bin/repo\n\n\nRepo is a Google tool used to handle many git repositories in a sane way.\n\n\nuser@server:~/aic/ats.rombuild$ make bin/repo\ncurl -s https://storage.googleapis.com/git-repo-downloads/repo -o bin/repo \n chmod 755 bin/repo\n\n\n\n\nDownload the AOSP mirror (optional)\n\n\nIf you need to build multiple AOSP versions (for instance, Android 4.4.4 and 5.1.1) you should make\na local mirror of all AOSP repositories.\n\n\nWhen a local mirror is available, recreating the sources of any version is faster and consumes a lot less bandwidth.\n\n\nDownloading too much data from android.googlesource.com can trigger a temporary ban on your IP address.\n\n\nThe downside is that the mirror takes about 125GB and contains more than a thousand repositories.\n\n\nTo create the local mirror, run\n\n\nuser@server:~/aic/ats.rombuild$ ./bin/mirror-update\nrepo mirror has been initialized in /home/user/aic/ats.rombuild/src/mirror\nFetching projects:   0% (1/1125)\n[...]\nFetching projects: 100% (1125/1125), done.\n\n\n\n\nAfter the first download, you can periodically run mirror-update to synchronize with the upstream sources.\n\n\nDownload the sources\n\n\nIf you have a local mirror, run:\n\n\nuser@server:~/aic/ats.rombuildtest$ make rom-init-mirror\nmkdir -p src/aic-kitkat \n cd src/aic-kitkat \n /home/user/aic/ats.rombuildtest/bin/repo init -q\n-u https://github.com/AiC-Project/manifest.git -b aic-kitkat --reference=/home/user/aic/ats.rombuildtest/src/mirror\nwarning: no common commits\n[...]\n\nrepo has been initialized in /home/user/aic/ats.rombuildtest/src/aic-kitkat\nmkdir -p src/aic-lollipop \n cd src/aic-lollipop \n /home/user/aic/ats.rombuildtest/bin/repo init -q\n-u https://github.com/AiC-Project/manifest.git -b aic-lollipop --reference=/home/user/aic/ats.rombuildtest/src/mirror\n[...]\n\n\n\n\nIf you decided NOT to have a local mirror, run \nmake rom-init-nomirror\n instead.\n\n\nThen create the source tree:\n\n\nuser@server:~/aic/ats.rombuildtest$ make rom-sync-all\n/home/user/aic/ats.rombuildtest/bin/rom-sync src/aic-kitkat\nFetching projects: 100% (378/378), done.\nSyncing work tree: 100% (377/377), done.\n\n/home/user/aic/ats.rombuild/bin/rom-sync src/aic-lollipop\nFetching projects: 100% (388/388), done.\nSyncing work tree: 100% (387/387), done.\n\n\n\n\nThe above command creates a directory under \nsrc/\n for each available branch.\nYou can adapt the \nMakefile\n to your needs, for instance to only download a specific branch.\n\n\nEven after syncing, do NOT remove src/mirror as that would break the existing source trees.\n\n\nCompiling Android\n\n\nThe following command requires access to docker, therefore you may need to run it through sudo.\n\n\nIt creates docker images with compiler + dependencies, then run the compilation inside containers\nthat share the sources through a volume.\n\n\nuser@server:~/aic/ats.rombuild$ sudo make rom-build-all\ndocker build --build-arg USER_ID=1000 --build-arg GROUP_ID=1000 -t aic.rombuilder-4.4.4 docker/4.4.4\nSending build context to Docker daemon 4.608 kB\nStep 1 : FROM ubuntu:16.04\n ---\n 2fa927b5cdd3\nStep 2 : ENV archive \nmake-3.82.tar.gz\n\n ---\n Running in f0eb3ed0a0be\n[...]\nI/diskutils(29143): Wrote 1073741824 bytes to out/target/product/gobyt/android_system_disk.img @ 31365120\nUpdated inst_boot length to be 5413KB\nUpdated inst_system length to be 1048576KB\nCopying images to specified partition offsets\nFile edit complete. Wrote 2 images.\nDone with bootable android system-disk image -[ out/target/product/gobyt/android_system_disk.img ]-\nWARNING: The character device /dev/vboxdrv does not exist.\n         Please install the virtualbox-dkms package and the appropriate\n         headers, most likely linux-headers-generic.\n\n         You will not be able to start VMs until this problem is fixed.\nConverting from raw image file=\nout/target/product/gobyt/android_system_disk.img\n to file=\nout/target/product/gobyt/android_system_disk.vdi\n...\nCreating dynamic image with size 1105106944 bytes (1054MB)...\nDone with VirtualBox bootable system-disk image -[ out/target/product/gobyt/android_system_disk.vdi ]-\n\n\n\n\nFor each compiled branch, two images will appear under \n./android/{branch-name}/{gobyp, gobyt}/\n as soon as they are built,\nrespectively for phone and tablet.\n\n\nYou can reference these directories directly from the other AiC deployment scripts, or pack everything with \nmake tar\n.\n\n\nCompile the kernel (Kitkat only):\n\n\nIn AOSP 5.x and later, the kernel is compiled with the rest of the system.\n\n\nTo do the same for kitkat, you'll have to compile it manually before running \nmake rom-build-all\n.\n\n\nYou don't need to do that unless you want to change configuration, because the aic-kitkat\nsources include a precompiled kernel image.\n\n\n$ git clone https://github.com/AiC-Project/kernel.git -b aic-kitkat src/kernel\n$ cp src/aic-kitkat/device/aicVM/blob/bzImage.config src/kernel/.config\n$ . bin/kernel-env.sh\n$ cd src/kernel\n$ make clean oldconfig\n\n(optional) make xconfig\n\n$ make -j4\n$ cp arch/x86/boot/bzImage ../aic-kitkat/device/aicVM/blob/\n$ cp drivers/video/uvesafb.ko ../aic-kitkat/device/aicVM/blob/\n$ cp .config ../aic-kitkat/device/aicVM/blob/", 
            "title": "Home"
        }, 
        {
            "location": "/#building-android-images-for-aic", 
            "text": "This repository automates the creation of AOSP images for the AiC project.  Requirements:   A lot of disk space and time. 90-100GB for each Android version is a reasonable assumption.  A reasonably modern linux distribution (tested with Ubuntu 16.10).  The commands  make  and  docker .", 
            "title": "Building Android Images for AiC"
        }, 
        {
            "location": "/#install-binrepo", 
            "text": "Repo is a Google tool used to handle many git repositories in a sane way.  user@server:~/aic/ats.rombuild$ make bin/repo\ncurl -s https://storage.googleapis.com/git-repo-downloads/repo -o bin/repo   chmod 755 bin/repo", 
            "title": "Install bin/repo"
        }, 
        {
            "location": "/#download-the-aosp-mirror-optional", 
            "text": "If you need to build multiple AOSP versions (for instance, Android 4.4.4 and 5.1.1) you should make\na local mirror of all AOSP repositories.  When a local mirror is available, recreating the sources of any version is faster and consumes a lot less bandwidth.  Downloading too much data from android.googlesource.com can trigger a temporary ban on your IP address.  The downside is that the mirror takes about 125GB and contains more than a thousand repositories.  To create the local mirror, run  user@server:~/aic/ats.rombuild$ ./bin/mirror-update\nrepo mirror has been initialized in /home/user/aic/ats.rombuild/src/mirror\nFetching projects:   0% (1/1125)\n[...]\nFetching projects: 100% (1125/1125), done.  After the first download, you can periodically run mirror-update to synchronize with the upstream sources.", 
            "title": "Download the AOSP mirror (optional)"
        }, 
        {
            "location": "/#download-the-sources", 
            "text": "If you have a local mirror, run:  user@server:~/aic/ats.rombuildtest$ make rom-init-mirror\nmkdir -p src/aic-kitkat   cd src/aic-kitkat   /home/user/aic/ats.rombuildtest/bin/repo init -q\n-u https://github.com/AiC-Project/manifest.git -b aic-kitkat --reference=/home/user/aic/ats.rombuildtest/src/mirror\nwarning: no common commits\n[...]\n\nrepo has been initialized in /home/user/aic/ats.rombuildtest/src/aic-kitkat\nmkdir -p src/aic-lollipop   cd src/aic-lollipop   /home/user/aic/ats.rombuildtest/bin/repo init -q\n-u https://github.com/AiC-Project/manifest.git -b aic-lollipop --reference=/home/user/aic/ats.rombuildtest/src/mirror\n[...]  If you decided NOT to have a local mirror, run  make rom-init-nomirror  instead.  Then create the source tree:  user@server:~/aic/ats.rombuildtest$ make rom-sync-all\n/home/user/aic/ats.rombuildtest/bin/rom-sync src/aic-kitkat\nFetching projects: 100% (378/378), done.\nSyncing work tree: 100% (377/377), done.\n\n/home/user/aic/ats.rombuild/bin/rom-sync src/aic-lollipop\nFetching projects: 100% (388/388), done.\nSyncing work tree: 100% (387/387), done.  The above command creates a directory under  src/  for each available branch.\nYou can adapt the  Makefile  to your needs, for instance to only download a specific branch.  Even after syncing, do NOT remove src/mirror as that would break the existing source trees.", 
            "title": "Download the sources"
        }, 
        {
            "location": "/#compiling-android", 
            "text": "The following command requires access to docker, therefore you may need to run it through sudo.  It creates docker images with compiler + dependencies, then run the compilation inside containers\nthat share the sources through a volume.  user@server:~/aic/ats.rombuild$ sudo make rom-build-all\ndocker build --build-arg USER_ID=1000 --build-arg GROUP_ID=1000 -t aic.rombuilder-4.4.4 docker/4.4.4\nSending build context to Docker daemon 4.608 kB\nStep 1 : FROM ubuntu:16.04\n ---  2fa927b5cdd3\nStep 2 : ENV archive  make-3.82.tar.gz \n ---  Running in f0eb3ed0a0be\n[...]\nI/diskutils(29143): Wrote 1073741824 bytes to out/target/product/gobyt/android_system_disk.img @ 31365120\nUpdated inst_boot length to be 5413KB\nUpdated inst_system length to be 1048576KB\nCopying images to specified partition offsets\nFile edit complete. Wrote 2 images.\nDone with bootable android system-disk image -[ out/target/product/gobyt/android_system_disk.img ]-\nWARNING: The character device /dev/vboxdrv does not exist.\n         Please install the virtualbox-dkms package and the appropriate\n         headers, most likely linux-headers-generic.\n\n         You will not be able to start VMs until this problem is fixed.\nConverting from raw image file= out/target/product/gobyt/android_system_disk.img  to file= out/target/product/gobyt/android_system_disk.vdi ...\nCreating dynamic image with size 1105106944 bytes (1054MB)...\nDone with VirtualBox bootable system-disk image -[ out/target/product/gobyt/android_system_disk.vdi ]-  For each compiled branch, two images will appear under  ./android/{branch-name}/{gobyp, gobyt}/  as soon as they are built,\nrespectively for phone and tablet.  You can reference these directories directly from the other AiC deployment scripts, or pack everything with  make tar .", 
            "title": "Compiling Android"
        }, 
        {
            "location": "/#compile-the-kernel-kitkat-only", 
            "text": "In AOSP 5.x and later, the kernel is compiled with the rest of the system.  To do the same for kitkat, you'll have to compile it manually before running  make rom-build-all .  You don't need to do that unless you want to change configuration, because the aic-kitkat\nsources include a precompiled kernel image.  $ git clone https://github.com/AiC-Project/kernel.git -b aic-kitkat src/kernel\n$ cp src/aic-kitkat/device/aicVM/blob/bzImage.config src/kernel/.config\n$ . bin/kernel-env.sh\n$ cd src/kernel\n$ make clean oldconfig\n\n(optional) make xconfig\n\n$ make -j4\n$ cp arch/x86/boot/bzImage ../aic-kitkat/device/aicVM/blob/\n$ cp drivers/video/uvesafb.ko ../aic-kitkat/device/aicVM/blob/\n$ cp .config ../aic-kitkat/device/aicVM/blob/", 
            "title": "Compile the kernel (Kitkat only):"
        }
    ]
}